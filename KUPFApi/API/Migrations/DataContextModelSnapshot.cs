// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("API.Models.FormTitleDt", b =>
                {
                    b.Property<string>("LabelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArabicTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attiribute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormTitleHdId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LabelId");

                    b.HasIndex("FormTitleHdId");

                    b.ToTable("FormTitleDT");
                });

            modelBuilder.Entity("API.Models.FormTitleHd", b =>
                {
                    b.Property<string>("FormId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FormName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<string>("Navigation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenentId")
                        .HasColumnType("int");

                    b.HasKey("FormId");

                    b.ToTable("FormTitleHD");
                });

            modelBuilder.Entity("API.Models.TestCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TestCompanies");
                });

            modelBuilder.Entity("API.Models.TestEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("TestEmployees");
                });

            modelBuilder.Entity("API.Models.FormTitleDt", b =>
                {
                    b.HasOne("API.Models.FormTitleHd", null)
                        .WithMany("FormTitleDts")
                        .HasForeignKey("FormTitleHdId");
                });

            modelBuilder.Entity("API.Models.TestEmployee", b =>
                {
                    b.HasOne("API.Models.TestCompany", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("API.Models.FormTitleHd", b =>
                {
                    b.Navigation("FormTitleDts");
                });

            modelBuilder.Entity("API.Models.TestCompany", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
